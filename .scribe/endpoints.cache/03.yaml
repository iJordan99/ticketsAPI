## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Assigned Tickets'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/engineer/tickets
    metadata:
      groupName: 'Assigned Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get authenticated engineer's assigned tickets"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: 'sort=title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A, C, H, X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported. No-Example'
        required: false
        example: temporibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include:
        name: include
        description: 'Return resource with included relationship: Author, Engineer.'
        required: false
        example: Author
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-createdAt'
      'filter[title]': temporibus
      include: Author
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"ticket","id":1,"attributes":{"title":"velit","description":"Quibusdam sint quis esse ullam quia corrupti. Quasi sit eos ducimus cupiditate velit beatae ducimus. Fugit ut quos voluptatem adipisci.","status":"X","priority":"high","reproduction_step":"Excepturi iste dolore culpa repudiandae. Minus consectetur dolorem quia quod ipsam omnis voluptatem. Quo est est at ipsum ut sit. Natus totam quia id et tempore.","error_code":";","created_at":"2024-12-18T06:31:49.000000Z","updated_at":"2024-12-18T06:31:49.000000Z"},"includes":{"author":{"type":"user","id":5,"attributes":{"name":"Jonas Lindgren Sr.","email":"beahan.darwin@example.com","is_admin":false},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/authors\/5"}}},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/tickets\/1"}},{"type":"ticket","id":2,"attributes":{"title":"at","description":"Distinctio ad soluta molestiae nostrum et doloribus accusamus. Voluptatem voluptates consectetur et hic exercitationem vitae. Qui ipsum nihil expedita.","status":"H","priority":"medium","reproduction_step":"Qui dolorem dolores hic modi sunt cupiditate. Id ad assumenda qui eos. Incidunt sapiente voluptatem asperiores.","error_code":"T","created_at":"2024-12-03T06:31:49.000000Z","updated_at":"2024-12-18T06:31:49.000000Z"},"includes":{"author":{"type":"user","id":7,"attributes":{"name":"Nora Lesch","email":"leda.block@example.org","is_admin":false},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/authors\/7"}}},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/tickets\/2"}}],"links":{"first":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/tickets?page=1","last":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/tickets","per_page":15,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|bP7beFXTmiVIDVNY0J0CMZW9XnpwScLZ0Awcaefdc9bdb49c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/engineer/{user_id}/tickets'
    metadata:
      groupName: 'Assigned Tickets'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get an engineer's assigned tickets"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The id of the engineer.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: 11
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
        required: false
        example: 'sort=title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A, C, H, X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include:
        name: include
        description: 'Return resource with included relationship: Author, Engineer.'
        required: false
        example: Author
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-createdAt'
      include: Author
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"type":"ticket","id":1,"attributes":{"title":"velit","description":"Quibusdam sint quis esse ullam quia corrupti. Quasi sit eos ducimus cupiditate velit beatae ducimus. Fugit ut quos voluptatem adipisci.","status":"X","priority":"high","reproduction_step":"Excepturi iste dolore culpa repudiandae. Minus consectetur dolorem quia quod ipsam omnis voluptatem. Quo est est at ipsum ut sit. Natus totam quia id et tempore.","error_code":";","created_at":"2024-12-18T06:31:49.000000Z","updated_at":"2024-12-18T06:31:49.000000Z"},"includes":{"author":{"type":"user","id":5,"attributes":{"name":"Jonas Lindgren Sr.","email":"beahan.darwin@example.com","is_admin":false},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/authors\/5"}}},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/tickets\/1"}},{"type":"ticket","id":2,"attributes":{"title":"at","description":"Distinctio ad soluta molestiae nostrum et doloribus accusamus. Voluptatem voluptates consectetur et hic exercitationem vitae. Qui ipsum nihil expedita.","status":"H","priority":"medium","reproduction_step":"Qui dolorem dolores hic modi sunt cupiditate. Id ad assumenda qui eos. Incidunt sapiente voluptatem asperiores.","error_code":"T","created_at":"2024-12-03T06:31:49.000000Z","updated_at":"2024-12-18T06:31:49.000000Z"},"includes":{"author":{"type":"user","id":7,"attributes":{"name":"Nora Lesch","email":"leda.block@example.org","is_admin":false},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/authors\/7"}}},"links":{"self":"http:\/\/tickets-laracast.test\/api\/v1\/tickets\/2"}}],"links":{"first":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/11\/tickets?page=1","last":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/11\/tickets?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/11\/tickets?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/tickets-laracast.test\/api\/v1\/engineer\/11\/tickets","per_page":15,"to":2,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4|bP7beFXTmiVIDVNY0J0CMZW9XnpwScLZ0Awcaefdc9bdb49c'
    controller: null
    method: null
    route: null
    custom: []
