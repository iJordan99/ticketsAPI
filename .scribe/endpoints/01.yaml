name: Tickets
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tickets
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tickets'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sort:
        name: sort
        description: |-
          Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign:
          priority,status,CreatedAt,UpdatedAt.
        required: false
        example: 'sort=title,-createdAt'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: A, C, H, X.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards are supported.'
        required: false
        example: '*fix*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      assigned:
        name: assigned
        description: 'Filter by assigned/unassigned : True,False.,Yes,No,1, 0'
        required: false
        example: 'True'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      include:
        name: include
        description: 'Return resource with included relationship: author, engineer.'
        required: false
        example: author
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      sort: 'sort=title,-createdAt'
      'filter[title]': '*fix*'
      assigned: 'True'
      include: author
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":{"type":"AuthenticationException","status":401,"message":"Unauthenticated."}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tickets/{id}'
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific ticket.'
      description: 'Display an individual ticket.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      include:
        name: include
        description: 'Return resource with included relationship: author, engineer.'
        required: false
        example: author
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      include: author
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"error":{"type":"AuthenticationException","status":401,"message":"Unauthenticated."}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Replace a Ticket'
      description: 'Replace the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: true
        example: 'Exercitationem perferendis accusantium suscipit omnis culpa repellat et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: true
        example: C
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.priority:
        name: data.attributes.priority
        description: 'Must be at least 1. Must not be greater than 3.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: saepe
          description: 'Exercitationem perferendis accusantium suscipit omnis culpa repellat et.'
          status: C
          priority: 1
        relationships:
          author:
            data:
              id: 12
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a Ticket'
      description: 'Update the specified ticket in storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data.attributes:
        name: data.attributes
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: ''
        required: false
        example: quam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: ''
        required: false
        example: 'Voluptas dolorem occaecati quia rerum accusantium consequuntur aliquam.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: ''
        required: false
        example: A
        type: string
        enumValues:
          - A
          - C
          - H
          - X
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.priority:
        name: data.attributes.priority
        description: ''
        required: false
        example: Low
        type: string
        enumValues:
          - low
          - medium
          - high
          - Low
          - Medium
          - High
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data:
        name: data.relationships.author.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author:
        name: data.relationships.author
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.relationships.author.data.id:
        name: data.relationships.author.data.id
        description: ''
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: quam
          description: 'Voluptas dolorem occaecati quia rerum accusantium consequuntur aliquam.'
          status: A
          priority: Low
        relationships:
          author:
            data:
              id: 8
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tickets/{ticket_id}'
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a ticket.'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/tickets/{ticket_id}/engineer'
    metadata:
      groupName: Tickets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign an engineer'
      description: 'Assigns an engineer to the provided ticket'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      ticket_id:
        name: ticket_id
        description: 'The ID of the ticket.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      ticket_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.attributes.engineer:
        name: data.attributes.engineer
        description: 'The <code>id</code> of an existing record in the users table. The <code>user_id</code> of an existing record in the engineers table.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          engineer: 7
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8|skv9ZvzuDtoAWB8TktWjVSqj0ksvzJUVxODjp5UT7f50dd36'
    controller: null
    method: null
    route: null
    custom: []
